{"version":3,"sources":["views/Registration.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","display","justifyContent","alignItems","paper","flexDirection","padding","element","margin","Registration","classes","useParams","userId","channelId","React","useState","name","setName","city","setCity","about","setAbout","tags","setTags","Date","birthDate","setBirthDate","gender","setGender","preference","setPreference","sendData","a","fetch","serverAddress","method","headers","body","JSON","stringify","alert","message","className","utils","DateFnsUtils","Paper","Typography","variant","TextField","label","value","onChange","event","target","multiline","format","date","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","onClick","color","backgroundColor","palette","background","default","App","path","createMuiTheme","type","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0b54f5aa.chunk.js","sourcesContent":["import { Button, FormControl, FormControlLabel, FormLabel, makeStyles, Paper, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\r\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst serverAddress = 'http://localhost:3001';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: '20px 40px',\r\n  },\r\n  element: {\r\n    margin: '10px 0'\r\n  }\r\n}));\r\n\r\nconst Registration = () => {\r\n  const classes = useStyles();\r\n  const { userId, channelId } = useParams();\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [city, setCity] = React.useState('');\r\n  const [about, setAbout] = React.useState('');\r\n  const [tags, setTags] = React.useState('');\r\n  const [birthDate, setBirthDate] = React.useState(new Date());\r\n  const [gender, setGender] = React.useState('female');\r\n  const [preference, setPreference] = React.useState('female');\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleCityChange = (event) => {\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  const handleAboutChange = (event) => {\r\n    setAbout(event.target.value);\r\n  };\r\n\r\n  const handleTagsChange = (event) => {\r\n    setTags(event.target.value);\r\n  };\r\n\r\n  const handleBirthDateChange = (date) => {\r\n    setBirthDate(date);\r\n  };\r\n\r\n  const handleGenderChange = (event) => {\r\n    setGender(event.target.value);\r\n  };\r\n\r\n  const handlePreferenceChange = (event) => {\r\n    setPreference(event.target.value);\r\n  };\r\n\r\n  const sendData = async () => {\r\n    try {\r\n      await fetch(serverAddress + '/user/info', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n          userId,\r\n          channelId,\r\n          name,\r\n          city,\r\n          about,\r\n          tags,\r\n          birthDate,\r\n          gender,\r\n          preference\r\n        })\r\n      });\r\n\r\n      alert('Регистрация прошла успешно');\r\n    } catch(e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant='h4'>Регистрация</Typography>\r\n          <TextField\r\n            label='Имя'\r\n            value={name}\r\n            className={classes.element}\r\n            onChange={handleNameChange}\r\n          />\r\n          <TextField\r\n            label='Город'\r\n            value={city}\r\n            className={classes.element}\r\n            onChange={handleCityChange}\r\n          />\r\n          <TextField\r\n            label='О себе'\r\n            multiline\r\n            value={about}\r\n            className={classes.element}\r\n            onChange={handleAboutChange}\r\n          />\r\n          <TextField\r\n            label='Теги (через запятую)'\r\n            value={tags}\r\n            onChange={handleTagsChange}\r\n            className={classes.element}\r\n          />\r\n          <KeyboardDatePicker\r\n            label=\"Дата рождения\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={birthDate}\r\n            onChange={handleBirthDateChange}\r\n            className={classes.element}\r\n          />\r\n          <FormControl className={classes.element}>\r\n            <FormLabel>Пол</FormLabel>\r\n            <RadioGroup value={gender} onChange={handleGenderChange}>\r\n              <FormControlLabel control={<Radio/>} label='Мужской' value='female'/>\r\n              <FormControlLabel control={<Radio/>} label='Женский' value='male'/>\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <FormControl className={classes.element}>\r\n            <FormLabel>Хотел бы познакомиться с</FormLabel>\r\n            <RadioGroup value={preference} onChange={handlePreferenceChange}>\r\n              <FormControlLabel control={<Radio/>} label='С мужчиной' value='female'/>\r\n              <FormControlLabel control={<Radio/>} label='С женщиной' value='male'/>\r\n              <FormControlLabel control={<Radio/>} label='Не важно' value='other'/>\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Button variant=\"contained\" onClick={sendData} color=\"primary\">Зарегистрироваться</Button>\r\n        </Paper>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Registration;","import {Redirect, Route, Switch, BrowserRouter as Router} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nimport RegistrationView from \"./views/Registration\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    backgroundColor: theme.palette.background.default\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <Switch>\r\n          <Route path='/registration/:channelId/:userId'>\r\n            <RegistrationView/>\r\n          </Route>\r\n        </Switch>\r\n      </div> \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core\";\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark'\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App/>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}